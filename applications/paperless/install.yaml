# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: paperless

---
# Postgres
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_USER
              value: paperless
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: paperless-db-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: paperless
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: paperless
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi

---
# Redis
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7
          ports:
            - containerPort: 6379

---
# Paperless-ngx
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless
  template:
    metadata:
      labels:
        app: paperless
    spec:
      securityContext:
        fsGroup: 1000  # <-- matches paperless GID
      serviceAccountName: default
      containers:
        - name: paperless
          image: ghcr.io/paperless-ngx/paperless-ngx:latest
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          env:
            - name: PAPERLESS_REDIS
              value: redis://redis-svc:6379
            - name: PAPERLESS_DBHOST
              value: postgres
            - name: PAPERLESS_DBUSER
              value: paperless
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  name: paperless-db-secret
                  key: POSTGRES_PASSWORD
            - name: PAPERLESS_DBNAME
              value: paperless
            - name: PAPERLESS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: paperless-db-secret
                  key: PAPERLESS_SECRET_KEY
          ports:
            - containerPort: 8000
          volumeMounts:
            - mountPath: /usr/src/paperless/data
              name: data
            - mountPath: /usr/src/paperless/media
              name: media
            - mountPath: /usr/src/paperless/consume
              name: consume
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: paperless-data
        - name: media
          persistentVolumeClaim:
            claimName: paperless-media
        - name: consume
          persistentVolumeClaim:
            claimName: paperless-consume
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-data
  namespace: paperless
spec:
  accessModes: ["ReadWriteOnce"]
  volumeName: nfs-pv-synology-paperless-data
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-media
  namespace: paperless
spec:
  accessModes: ["ReadWriteOnce"]
  volumeName: nfs-pv-synology-paperless-media
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-consume
  namespace: paperless
spec:
  accessModes: ["ReadWriteOnce"]
  volumeName: nfs-pv-synology-paperless-consume
  resources:
    requests:
      storage: 1Gi

---
# Service fÃ¼r Paperless
apiVersion: v1
kind: Service
metadata:
  name: paperless-svc
  namespace: paperless
spec:
  type: NodePort
  selector:
    app: paperless
  ports:
    - port: 80
      targetPort: 8000
---
# Service for redis
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
  namespace: paperless
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
---
